<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.UserMapper">
  <select id="selectUserByPrimaryKey" resultType="com.example.entity.User">
    select *
    from `user`
    where user_id = #{userId}
  </select>
  
  <select id="selectUserByEmail" resultType="com.example.entity.User">
    select *
    from `user`
    where email = #{email}
  </select>
  
    <select id="selectPreRegistrationByPrimaryKey" resultType="com.example.entity.PreRegistration">
    select *
    from pre_registration
    where token = #{token}
  </select>
  
  <insert id="insertPreRegistration">
    insert into pre_registration
      (token, email, expires_at)
    values (#{token}, #{email}, #{expiresAt})
  </insert>
  
  <delete id="deletePreRegistrationByPrimaryKey">
    delete from pre_registration
    where token = #{token}
  </delete>
  
  <insert id="insertUser" parameterType="com.example.entity.User">
    INSERT INTO `user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      user_id,
      email,
      password_hash,
      last_name,
      first_name,
      last_name_kana,
      first_name_kana,
      postal_code,
      address_pref_city,
      address_area,
      address_block,
      address_building,
      phone_number,
      birthday,
      gender,
      <if test="nickname != null">
        nickname,
      </if>
    </trim>
    VALUES
    <trim prefix="(" suffix=")" suffixOverrides=",">
      #{userId},
      #{email},
      #{passwordHash},
      #{lastName},
      #{firstName},
      #{lastNameKana},
      #{firstNameKana},
      #{postalCode},
      #{addressPrefCity},
      #{addressArea},
      #{addressBlock},
      #{addressBuilding},
      #{phoneNumber},
      #{birthday},
      #{gender},
      <if test="nickname != null">
        #{nickname},
      </if>
    </trim>
  </insert>
  
  <insert id="insertPasswordResetToken">
    insert into password_reset_token(
      token_hash,
      email,
      expires_at
    ) values(
      #{tokenHash},
      #{email},
      #{expiresAt}
    )
  </insert>
  
  <select id="selectPasswordResetTokenByPrimaryKey" resultType="com.example.entity.PasswordResetToken">
    select *
    from password_reset_token
    where token_hash = #{hash}
  </select>
  
  <delete id="deletePasswordResetToken">
    delete from password_reset_token
    where token_hash = #{token}
  </delete>
  
  <update id="updatePassword">
    update `user`
      set password_hash = #{pw}
    where email = #{email}
  </update>
  
</mapper>