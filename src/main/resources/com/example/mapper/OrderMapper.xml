<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.OrderMapper">

  <!-- =========================
       SELECT
  ========================== -->
  <select id="selectCheckoutItems"
        resultType="com.example.dto.CheckoutItemDto">
    SELECT 
      ci.product_id,
      v.product_name,
      ci.qty,
      v.price_excl        AS current_unit_price_excl,
      ci.unit_price_excl  AS unit_price_excl_at_add_to_cart,
      v.price_incl        AS unit_price_incl,
      (v.price_incl * ci.qty) AS subtotal_incl,
      v.available,
      v.status
    FROM cart_item ci
    JOIN vw_product_core v ON v.product_id = ci.product_id
    WHERE ci.cart_id = #{cartId}
    ORDER BY ci.created_at DESC, ci.product_id DESC
    FOR UPDATE
  </select>
  
  <select id="selectOrderByPrimaryKey" resultType="com.example.entity.Order">
    select *
    from `order`
    where order_id = #{orderId}
  </select>

  <select id="selectOrdersByUserId" resultType="com.example.entity.Order">
    select *
    from `order`
    where user_id = #{userId}
    order by created_at desc
  </select>
  
  <select id="selectOrderItems" resultType="com.example.entity.OrderItem">
    select *
    from order_item
    where order_id = #{orderId}
  </select>

  <!-- =========================
       INSERT
  ========================== -->
  <insert id="insertOrderHeader" useGeneratedKeys="true" keyProperty="orderNumber" keyColumn="order_number">
    insert into `order` (
      order_id, user_id, name, postal_code, address,
      total_qty, total_price_incl
    ) values (
        #{orderId}, #{userId}, #{name}, #{postalCode}, #{address},
        #{totalQty}, #{totalPriceIncl}
    )
  </insert>
  
  <insert id="insertOrderItems">
    insert into order_item (
      order_id, product_id, product_name, qty, unit_price_incl, subtotal_incl
    ) values 
    <foreach collection="items" item="it" separator=",">
      (#{it.orderId}, #{it.productId}, #{it.productName}, #{it.qty},
         #{it.unitPriceIncl}, #{it.subtotalIncl})
    </foreach>
  </insert>
  
  <!-- =========================
       UPDATE
  ========================== -->
  <update id="applyTransition">
    update `order`
    set
      order_status = #{next.order},
      shipping_status = #{next.shipping},
      payment_status = #{next.payment}
    where order_id = #{orderId}
      and order_status = #{expected.order}
      and shipping_status = #{expected.shipping}
      and payment_status = #{expected.payment}
  </update>
  
  <update id="restoreInventory">
    update product p
    join order_item oi
      on oi.product_id = p.product_id
    set p.stock = p.stock + oi.qty
    where oi.order_id = #{orderId}
  </update>
  
  <!-- =========================
       DELETE (コメントアウト)
  ========================== -->
  <!-- <delete id="deleteRemovedItems"> -->
  <!-- delete from cart_item -->
  <!-- where cart_id = #{cartId} -->
  <!-- and product_id in -->
  <!-- <foreach collection="productIds" item="id" open="(" separator="," close=")"> -->
  <!-- #{id} -->
  <!-- </foreach> -->
  <!-- </delete> -->

  <!-- コメントアウト中の追加セレクト -->
  <!--  <select id="selectItemsByOrderIds" resultType="com.example.dto.OrderItemDto">-->
  <!--    select-->
  <!--      order_id, product_id, product_name, price, qty-->
  <!--    from order_item-->
  <!--    where order_id in-->
  <!--      <foreach  item="id" collection="orderIds" open="(" separator="," close=")">-->
  <!--        #{id}-->
  <!--      </foreach>-->
  <!--  </select>-->

</mapper>
