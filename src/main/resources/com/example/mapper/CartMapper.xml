<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.CartMapper">
  <select id="selectCartByPrimaryKey" resultType="com.example.entity.Cart">
    select *
    from cart
    where cart_id = #{cartId}
  </select>
  
  <select id="selectCartByUser" resultType="com.example.entity.Cart">
    select *
    from cart
    where user_id = #{userId}
  </select>

  <select id="selectCartItemByPrimaryKey" resultType="com.example.entity.CartItem">
    select *
    from cart_item
    where cart_id = #{cartId}
      and product_id = #{productId}
  </select>
  
  <insert id="insertCartIfAbsent">
    insert ignore into cart
    <trim prefix="(" suffix=")" suffixOverrides=",">
      cart_id,
      <if test="userId != null">user_id,</if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      #{cartId},
      <if test="userId != null">#{userId},</if>
    </trim>
  </insert>
  
  <insert id="upsertCartItem">
    insert into cart_item
      (cart_id, product_id, qty, price)
    values
      (#{cartId}, #{productId}, #{qty}, #{price})
    on duplicate key update
      qty = least(qty + VALUES(qty), 20),
      price = VALUES(price)
  </insert>
  
  <insert id="findOrCreateCartIdByUser">
    insert into cart (cart_id, user_id)
    select #{candidateCartId}, #{userId}
    where not exists (
      select 1
      from cart
      where user_id = #{userId}
    )
      
    <selectKey keyProperty="cartId" resultType="string" order="AFTER">
      select cart_id
      from cart
      where user_id = #{userId}
    </selectKey>
  </insert>
  
  <insert id="mergeCart">
    insert into cart_item (cart_id, product_id, qty, price)
    select #{userCartId}, src.product_id, src.qty, src.price
      from cart_item as src
    where src.cart_id = #{guestCartId}
    on duplicate key update
      cart_item.qty = least(cart_item.qty + values(qty), 20),
      cart_item.price = values(price)
  </insert>
  
  <delete id="deleteCart">
    delete from cart
    where cart_id = #{cartId}
  </delete>
  
  <delete id="deleteCartItem">
    delete from cart_item
    where cart_id = #{cartId}
      and product_id = #{productId}
  </delete>
  
  <select id="selectCartItems" resultType="com.example.dto.CartItemDto">
    select ci.product_id, p.product_name, ci.qty, p.price as priceEx,
      ci.price as priceAtCartAdditon
    from cart_item ci
    join product p on p.product_id = ci.product_id
    where ci.cart_id = #{cartId}
    order by ci.created_at desc, ci.product_id desc
  </select>
  
  <update id="updateCartItemQty">
    update cart_item 
      set qty = #{qty}
    where cart_id = #{cartId}
      and product_id = #{productId}
  </update>
  
</mapper>